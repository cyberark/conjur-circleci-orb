# conjur policy load -f authn-jwt.yml -b conjur/authn-jwt
# conjur variable set -i conjur/authn-jwt/circleci2/identity-path -v 'data/circleci2-apps'
# conjur variable set -i conjur/authn-jwt/circleci2/audience -v "56ee901c-258a-4318-9e77-a59fa0c6b976"
# conjur variable set -i conjur/authn-jwt/circleci2/issuer -v "https://oidc.circleci.com/org/56ee901c-258a-4318-9e77-a59fa0c6b976"
# conjur variable set -i conjur/authn-jwt/circleci2/jwks-uri -v "https://oidc.circleci.com/org/56ee901c-258a-4318-9e77-a59fa0c6b976/.well-known/jwks-pub.json"
# conjur variable set -i conjur/authn-jwt/circleci2/token-app-property -v "oidc.circleci.com/project-id"
- !policy
  id: circleci2
  body:
    - !webservice

    # Mandatory variable: How the JWT Authenticator gets the signing keys
    # Uncomment either 'jwks-uri' or 'public-keys

    - !variable jwks-uri

    # - !variable public-keys

    # Optional variables
    # Uncomment one or all of the following optional variables
    # Note: If you uncomment 'identity-path' you must also uncomment 'token-app-property'
    # Note: If you uncomment 'public-keys' above you must also uncomment 'issuer'

    #- !variable ca-cert

    - !variable token-app-property

    - !variable identity-path

    - !variable issuer

    # - !variable enforced-claims

    #- !variable claim-aliases

    - !variable audience


    # Group of applications that can authenticate using this JWT Authenticator
    - !group apps

    - !permit
      role: !group apps
      privilege: [ read, authenticate ]
      resource: !webservice

    - !webservice status

    # Group of users who can check the status of the JWT Authenticator
    - !group operators

    - !permit
      role: !group operators
      privilege: [ read ]
      resource: !webservice status
