---
# Load policy into root branch
# This policy defines a demo organization for testing basic capabilities

# docker-compose exec client conjur policy load -b root -f policy/base.yml
# docker-compose exec client conjur policy load -b data/circleci -f policy/authn-host.yml
# docker-compose exec client conjur policy load -b root -f policy/authn-jwt.yml
#### issuer provide:  https://oidc.circleci.com/org/$CIRCLECI_ORG_ID 
# docker-compose exec client conjur variable set -i conjur/authn-jwt/circleci1/issuer -v "https://oidc.circleci.com/org/56ee901c-258a-4318-9e77-a59fa0c6b976"
#### jwks-uri : https://oidc.circleci.com/org/$CIRCLECI_ORG_ID/.well-known/jwks-pub.json
# docker-compose exec client conjur variable set -i conjur/authn-jwt/circleci1/jwks-uri -v "https://oidc.circleci.com/org/56ee901c-258a-4318-9e77-a59fa0c6b976/.well-known/jwks-pub.json"
# docker-compose exec client conjur variable set -i conjur/authn-jwt/circleci1/token-app-property -v "oidc.circleci.com/project-id"
#### audience : $CIRCLECI_ORG_ID  
# docker-compose exec client conjur variable set -i conjur/authn-jwt/circleci1/audience -v "56ee901c-258a-4318-9e77-a59fa0c6b976"
# docker-compose exec client conjur variable set -i conjur/authn-jwt/circleci1/identity-path -v "data/circleci/apps"

# Define Admins, create admins group, create admin01 user
- !group
  id: admins
  owner: !user admin

- !user
  id: admin01
  owner: !group admins

- !permit
  role: !group admins
  privileges: [read, update, create]
  resource: !policy root

- !grant
  role: !group admins
  members:
    - !user admin01

# Define data branch
- !policy
  id: data
  owner: !group admins

# Define data/circleci branch, create users, hosts, groups, layers, variables
- !policy
  id: data/circleci
  owner: !group admins

# data/circleci/admins group will admin everything under data/circleci branch
- !group
  id: data/circleci/admins
  owner: !group admins

- !permit
  role: !group data/circleci/admins
  privileges: [read, update, create]
  resource: !policy data/circleci

- !permit
  role: !group data/circleci/admins
  privileges: [read, update, create]
  resource: !group data/circleci/admins

- &users
  - !user
    id: circleci-admin01
    owner: !group data/circleci/admins

- !grant
  role: !group data/circleci/admins
  members: *users